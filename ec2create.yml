##Demo playbook
##Creates a custom securty group
#spinsup new EC2 Instances
#waits for ssh to become active on instance
# to run this do:   ansible-playbook ec2create.yml
#
#To use aws pem key use below options, even if new user(bek) is created inside EC2 instance
# id_rsa privet file needs to be renamed to rd_rsa.pem and that needs to be used each time to log in.
#
#/etc/ansible/hosts    file has to have list of hosts
#ansible-playbook usermanagement.yaml --user=ec2-user --private-key=/root/AWS/testweb.pem
#ansible labservers -m shell -a "uptime" --private-key=/root/AWS/testweb.pem -u ec2-user



- hosts: localhost

  tasks:

    - name: Setting up Security Group
      ec2_group:
       name: Azi_sec_group
       description: Rules allowing traffic on port 22 and 80
       region: us-east-2
       rules:
       - proto: tcp
         from_port: 80
         to_port: 80
         cidr_ip: 0.0.0.0/0
       - proto: tcp
         from_port: 22
         to_port: 22
         cidr_ip: 0.0.0.0/0
       rules_egress:
       - proto: all
         cidr_ip: 0.0.0.0/0

    - name: Provision a EC2 instance
      ec2:
        key_name: testweb
        region: us-east-2
        instance_type: t2.micro
        image: ami-8c122be9
        wait: yes
        wait_timeout: 500
        instance_tags: 
          Name: awslabserever3
          Owner: Azizbek
        monitoring: no
        vpc_subnet_id: put here your subnet ID
        assign_public_ip: yes
        group: Azi_sec_group
      register: ec2_out

    - name: wait for ssh to come up
      wait_for: host={{ item.public_dns_name }} port=22 delay=60 timeout=320 state=started
      with_items: '{{ec2_out.instances}}'
